name: cicd flow
on: 
 push:
   branches:
     - "master"
 workflow_dispatch:
   
jobs:
  Build-Test:
    runs-on: self-hosted
    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
       fetch-depth: 0
    - name: Detect secrets with Talisman in incoming commits
      uses: carhartl/talisman-secrets-scan-action@v1.4.0
    - name: build
      run: |
        mvn clean package -DskipTests=true
    - name: test
      run: |
        mvn test
    - name: Run tests 
      run: |
          mvn '-Dtest=!*IntegrationTest' verify -Djacoco.destFile=exportJacoco/jacoco-fast.exec
    - name: Upload jacoco exec results
      uses: actions/upload-artifact@v2
      with:
        name: unit-tests-jacoco
        path: exportJacoco/jacoco-fast.exec
    
  SAST:
    runs-on: self-hosted
    needs: Build-Test
    steps:
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
            #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
            SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
        run: |
          echo "Secret Value: ${{ secrets.SONAR_TOKEN }}"
          echo "Host URL: ${{ secrets.SONAR_HOST_URL }}"
          echo "Project Key: ${{ secrets.SONAR_PROJECT_KEY }}"
          mvn -B verify sonar:sonar -Dsonar.host.url=${{secrets.SONAR_HOST_URL}} -Dsonar.token=${{secrets.SONAR_TOKEN}} -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} -Dsonar.organization=rayudusubrahmanyam12

  Vulnerability-Scan-Docker:
     runs-on: self-hosted
     needs: SAST
     steps:
      - name: trivy scan
        run: |
         bash trivy-docker-image-scan.sh

  IMAGE-BUILD-PUSH:
      runs-on: self-hosted
      needs: Vulnerability-Scan-Docker 
      steps:
      - name: image build
        run: |
          docker login -u rayudusubrahmanyam12 -p ${{ secrets.DOCKER_PASSWD }}
          docker build -t rayudusubrahmanyam12/numeric-app:""$GIT_COMMIT"" .
          docker push rayudusubrahmanyam12/numeric-app:""$GIT_COMMIT""

  K8S-SCAN:
      runs-on: self-hosted
      needs: IMAGE-BUILD-PUSH
      steps:
      - name: Run Snyk to check Kubernetes manifest file for issues
        uses: snyk/actions/iac@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #- name: ZAP Scan
      #  uses: zaproxy/action-full-scan@v0.4.0
      #  with:
      #    target: 'http://www.s3-saanvi-sri-sai.co.in'        